Code for trivial program:
1.

#include <math.h>
#include <stdio.h>

int main(void)
{
	double x = cos(0.5);
	printf("%.17g", x);
	return 0;
}

Command to Compile and run code: 
gcc lab9.c -o lab9
./lab9
Output: 
0.87758256189037276

2.
To see what dynamic libraries my code invokes, I used the command
ldd lab9

Output: 
linux-vdso.so.1 =>  (0x00007ffc44f54000)
libc.so.6 => /lib64/libc.so.6 (0x00000036bc400000)
/lib64/ld-linux-x86-64.so.2 (0x00000036bc000000)

To see what system calls my program makes, I made a file output.txt from the strace command
strace -o output.txt ./lab9

execve("./lab9", ["./lab9"], [/* 32 vars */]) = 0
brk(0)                                  = 0xd6a000
mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7f3ce4621000
access("/etc/ld.so.preload", R_OK)      = -1 ENOENT (No such file or directory)
open("/etc/ld.so.cache", O_RDONLY)      = 3
fstat(3, {st_mode=S_IFREG|0644, st_size=156600, ...}) = 0
mmap(NULL, 156600, PROT_READ, MAP_PRIVATE, 3, 0) = 0x7f3ce45fa000
close(3)                                = 0
open("/lib64/libc.so.6", O_RDONLY)      = 3
read(3, "\177ELF\2\1\1\3\0\0\0\0\0\0\0\0\3\0>\0\1\0\0\0000\356A\2746\0\0\0"..., 832) = 832
fstat(3, {st_mode=S_IFREG|0755, st_size=1930416, ...}) = 0
mmap(0x36bc400000, 3750184, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 3, 0) = 0x36bc400000
mprotect(0x36bc58a000, 2097152, PROT_NONE) = 0
mmap(0x36bc78a000, 24576, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x18a000) = 0x36bc78a000
mmap(0x36bc790000, 14632, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_ANONYMOUS, -1, 0) = 0x36bc790000
close(3)                                = 0
mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7f3ce45f9000
mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7f3ce45f8000
mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7f3ce45f7000
arch_prctl(ARCH_SET_FS, 0x7f3ce45f8700) = 0
mprotect(0x36bc78a000, 16384, PROT_READ) = 0
mprotect(0x36bc21f000, 8192, PROT_READ) = 0
munmap(0x7f3ce45fa000, 156600)          = 0
fstat(1, {st_mode=S_IFCHR|0620, st_rdev=makedev(136, 5), ...}) = 0
mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7f3ce4620000
write(1, "0.87758256189037276", 19)     = 19
exit_group(0)                           = ?
+++ exited with 0 +++

These are all the system calls that are made by the lab9 executable file
The calls that relate to dynamic linking are open() and read(). The calls to mmap() are used to map functions extracted from the libraries to memory that is within the functions scope. 

I then ran the command 
ls /usr/bin | awk 'NR%101==804598987%101' > commands.txt
To get my list of commands.
Output:

anthy-agent
bzless
corelist
db_verify
eps2eps
flex
git-receive-pack
gpg-error-config
gvfs-monitor-dir
hwloc-assembler-remote
jrunscript
klauncher
lconvert
magnifier
mpstat
nl
pamchannel
pbmpage
pgmhist
plymouth-log-viewer
ppmhist
pulseaudio
report-cli
satyr
smbclient
svnlastchange
timeout
wftopfa
xmlproc_parse

To test what dynamic libraries are run, I first ran the command
cd /usr/bin to get to the location of the executables of these commands

I ran an 
ldd command 
on each of these files where command is one of the commands in the list

The files that outputted "not a dynamic executable " are:
bzless, corelist, eps2eps, gpg-error-config, hwloc-assembler-remote, svnlastchange, wftopfa, xmlproc_parse.

The reason foer this output is that the code for these files does not depend on any other file. Hence, they are not dynamically linked to any other file.

The ldd git-receive-pack outputted command gave an error message: 
ld: cannot open output file a.out: Permission denied

After looking at the man page of ldd, I saw that one of the bugs in this command is that 
"ldd does not work on a.out shared libraries"

For the rest of the commands I ran the following commands:
ldd commandName >> ~/outputLibraries.txt
to output the list of all the libraries into a file named outputLibraries.txt






